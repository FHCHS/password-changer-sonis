<?php
// $Id: password_changer_sonis.test,v 0.1 2011/03/22 23:28:11 arod Exp $

/**
 * @file
 * Test case for Testing the page example module.
 *
 * This file contains the test cases to check if module is performing as
 * expected.
 *
 */
//Include files

//Installing module if I can use the 


//Extends DrupalWebTestCase to get database connection
class PasswordChangerSonisAdminCase extends DrupalWebTestCase  {


  public static function getInfo() {
    return array(
      'name' => 'SONIS Password Changer Submodule - Configuration',
      'description' => 'Test password changer configuration pages for SONIS.',
      'group' => 'Password Changer',
    );
  }
  
  function setUp() {
    parent::setUp('password_changer_api', 'password_changer_sonis', 'sonisweb_integration');
    
    //Create role
    $rid = $this->drupalCreateRole(array('administer password changer', 'administer sonisweb integration', 'access administration pages'), 'admin');
    
    //Create user
    // Create a user assigned to that role.
    $edit = array();
    $edit['name']   = $this->randomName();
    $edit['mail']   = $edit['name'] . '@example.com';
    $edit['roles']  = array($rid => $rid);
    $edit['pass']   = 'admin_password';
    $edit['status'] = 1;
    
    //Create user
    $account = user_save(drupal_anonymous_user(), $edit);
    
     //Check if user was created properly
    $this->assertTrue(!empty($account->uid), t('User created with name %name and pass %pass', array('%name' => $edit['name'], '%pass' => $edit['pass'])), t('User login'));
    
    
    // Add the raw password so that we can log in as this user.
    $account->pass_raw = $edit['pass'];
    $this->admin_user = $account;
    
    
    //Create user and login
    $this->drupalLogin($this->admin_user);

  }
  
    // Test Case 1.1 
  function testPasswordChangerSonisAccessHelp() {
   
  
    //Access help page
    $this->drupalGet('admin/help/password_changer_sonis');
    $this->assertResponse(200, t('Access help page successfully.'));
    $this->assertText(t('Password Changer for Sonis'), t('Page title is Password Changer for SONIS'));
    
  }

  // Test Case 1.2
  function testPasswordChangerSoniswebAccessConfiguration() {
    
    //Access configuration page
    $this->drupalGet('admin/config/sonisweb_integration');
    $this->assertResponse(200, t('Access SONISWEB integration settings page.'));
    $this->assertText(t('SONISWEB Integration Settings'), t('Page title SONISWEB Integration Settings.'));
    
  }
  
  //Test Case 1.3
  function testPasswordChangerSonisAddSettings() {
    
    $this->drupalPost('admin/config/sonisweb_integration', array('sonisweb_integration_soap_base_url' =>'http://fhcdv-mars.fhchs.edu/sonisweb200/CustomPages/',
                                                                 'sonisweb_integration_admin_password' =>'arrc29',
                                                                 'sonisweb_integration_admin_user' =>'arrc29',
                                                                 ),
                                                                 t('Save Settings'));
    
    
    $this->assertText(t('Settings saved.'),'Settings have been save for sonisweb integration.');
    
  }

}


//Extends DrupalWebTestCase to get database connection
class PasswordChangerSonisUserCase extends DrupalWebTestCase  {


  public static function getInfo() {
    return array(
      'name' => 'SONIS Password Changer Submodule - User Change Password',
      'description' => 'Test SONIS password changer from the user perspective, change password.',
      'group' => 'Password Changer',
    );
  }
  //Including modules that needed for the test case
  function setUp() {
    parent::setUp('password_changer_api', 'password_changer_sonis','sonisweb_integration');
    
      //Create role
    $rid = $this->drupalCreateRole(array('administer password changer', 'administer sonisweb integration'), 'admin');
    
    //Create user
    // Create a user assigned to that role.
    $edit = array();
    $edit['name']   = $this->randomName();
    $edit['mail']   = $edit['name'] . '@example.com';
    $edit['roles']  = array($rid => $rid);
    $edit['pass']   = 'admin_password';
    $edit['status'] = 1;
    
    //Create user
    $account = user_save(drupal_anonymous_user(), $edit);
    
     //Check if user was created properly
    $this->assertTrue(!empty($account->uid), t('User created with name %name and pass %pass', array('%name' => $edit['name'], '%pass' => $edit['pass'])), t('User login'));
    
    
    // Add the raw password so that we can log in as this user.
    $account->pass_raw = $edit['pass'];
    $this->admin_user = $account;
    
    
    //Create user and login
    $this->drupalLogin($this->admin_user);
    
    $this->drupalPost('admin/config/sonisweb_integration', array('sonisweb_integration_soap_base_url' =>'http://fhcdv-mars.fhchs.edu/sonisweb200/CustomPages/',
                                                                 'sonisweb_integration_admin_password' =>'arrc29',
                                                                 'sonisweb_integration_admin_user' =>'arrc29',
                                                                 ),
                                                                 t('Save Settings'));
    
    
    $this->assertText(t('Settings saved.'),'Settings have been save for sonisweb integration.');
    
    
    $this->drupalLogout($this->admin_user);
    
    
  }

  function testPasswordChangerSonisUserChangePassword() {
    
    //Test Case 2.1
    //Create student user
    $rid = $this->drupalCreateRole(array('access comments', 'access content', 'post comments', 'change own username'),
                                       'UNIVERSAL STUDENTS');
  
    //Set user values
    $edit['name']   = 'arrc29';
    $edit['mail']   = 'arrc29' . '@example.com';
    $edit['roles']  = array($rid => $rid);
    $edit['pass']   = 'test29';
    $edit['status'] = 1;
    //Creat user
    $account = user_save('', $edit);
    $account->pass_raw = $edit['pass'];
    $this->student_test = $account;   
    
    $this->assertTrue(!empty($account->uid), t('User created with name %name and pass %pass', array('%name' => $edit['name'], '%pass' => $edit['pass'])), t('User login'));
    
    
    $this->drupalLogin($this->student_test);
    
    $this->drupalGet('user/' . $this->student_test->uid . '/edit');
    $this->assertResponse(200, t('Able to reach the user %name and  profile page.', array('%name' => $this->student_test->name)));
    $this->assertText('SONIS','SONIS Learning System','Option to change SONIS password appears in the user profile page.');
    
    $this->drupalLogout();

   
  }
  
}




